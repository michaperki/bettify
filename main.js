(()=>{"use strict";class t{constructor(t,e,n,s,i){this.id=t,this.user=e,this.betEvent=n,this.betAmount=s,this.betChoice=i}setId(t){this.id=t}getBet(){return this.id}setUser(t){this.user=t}setBetEvent(t){this.betEvent=t}setBetAmount(t){this.betAmount=t}setBetChoice(t){this.betChoice=t}getUser(){return this.user}getBetEvent(){return this.betEvent}getBetAmount(){return this.betAmount}getBetChoice(){return this.betChoice}}class e{constructor(t,e){this.id=1,this.name=t,this.duration=e,this.status="open",this.openTime=new Date,this.closeTime=new Date(this.openTime.getTime()+1e3*this.duration),this.bets=[]}setId(t){this.id=t}getId(){return this.id}setName(t){this.name=t}setDuration(t){this.duration=t}setStatus(t){this.status=t}getName(){return this.name}getDuration(){return this.duration}getOpenTime(){return this.openTime}addBet(t){this.bets.push(t)}removeBet(t){this.bets.splice(this.bets.indexOf(t),1)}getBets=()=>this.bets;setBets(t){this.bets=t}getTimeRemaining(){if("closed"===this.status)return 0;const t=new Date,e=this.closeTime-t;let n=Math.floor(e/1e3),s=Math.floor(n/60);return s<10&&(s=`0${s}`),n<10&&(n=`0${n}`),0===s?`${n}`:`${s}:${n}`}}class n{constructor(){this.betEvents=[],this.addBetEvent(new e("Who will win the 2020 US Presidential Election?",60)),this.addBetEvent(new e("Who will win the 2020 US Presidential Election?",60)),this.addBetEvent(new e("Who will win the 2020 US Presidential Election?",60))}setBetEvents(t){this.betEvents=t}getBetEvents(){return this.betEvents}getBetEvent(t){return this.betEvents[t]}addBetEvent(t){this.betEvents.push(t)}removeBetEvent(t){this.betEvents.splice(t,1)}}class s{static saveBetEventList(t){localStorage.setItem("betEventList",JSON.stringify(t))}static getBetEventList(){const s=Object.assign(new n,JSON.parse(localStorage.getItem("betEventList")));return s.setBetEvents(s.getBetEvents().map((t=>Object.assign(new e,t)))),s.getBetEvents().forEach((e=>{e.setBets(e.getBets().map((e=>Object.assign(new t,e))))})),s}static saveBetEvent(t){localStorage.setItem("betEvent",JSON.stringify(t))}static getBetEvent(){const n=Object.assign(new e,JSON.parse(localStorage.getItem("betEvent")));return n.setBets(n.getBets().map((e=>Object.assign(new t,e)))),n}static saveBet(t){localStorage.setItem("bet",JSON.stringify(t))}static getBet(){return Object.assign(new t,JSON.parse(localStorage.getItem("bet")))}}class i{static loadContent(){i.createBetEvent("Who will win the 2020 US Presidential Election?"),i.loadBetEvents(),i.initAddBetEventButton(),document.addEventListener("keydown",i.handKeyboardInput)}static loadBetEvents(){s.getBetEventList().getBetEvents().forEach((t=>i.createBetEvent(t.name))),i.initAddBetEventButtons()}static createBetEvent(t){document.getElementById("bet-event-list").innerHTML+=` \n      <button class="button-bet-event" data-bet-event-button>\n        <div class="left-bet-event-panel">\n          <i class="fas fa-tasks"></i>\n          <span>${t}</span>\n        </div>\n        <div class="right-bet-event-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,i.initProjectButtons()}static loadBetEventContent(t){document.getElementById("bet-event-preview").innerHTML=`\n        <h1 id="bet-event-name">${betEventName}</h1>\n        <div class="bet-event-list" id="bet-event-list"></div>`,t.getBets().forEach((e=>i.createBet(e.name,e.odds,t))),i.initAddBetButtons()}static createBet(t,e,n){document.getElementById("bet-event-list").innerHTML+=`\n      <button class="button-bet" data-bet-button>\n        <div class="left-bet-panel">\n\n          <div class="bet-name">\n            <i class="fas fa-tasks"></i>\n            <span>${t}</span>\n          </div>\n          \n          <div class="bet-odds">\n            <i class="fas fa-percent"></i>\n            <span>${e}</span>\n          </div>\n\n        </div>\n        <div class="right-bet-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,i.initBetButtons(n)}static createBetEvent(){const t=document.getElementById("input-add-bet-event-popup").value;document.getElementById("bet-event-list").innerHTML+=`\n      <button class="button-bet-event" data-bet-event-button> \n        <div class="left-bet-event-panel">\n          <i class="fas fa-tasks"></i>\n          <span>${t}</span>\n        </div>\n        <div class="right-bet-event-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,i.initAddBetEventButton()}static createBet(){const e=document.getElementById("bet-name-input").value,n=document.getElementById("bet-odds-input").value,a=document.getElementById("bet-event-name").innerHTML,d=s.getBetEventList().getBetEvent(a);d.getBets().push(new t(e,n)),i.createBet(e,n,d),i.initBetButtons(d),document.getElementById("bet-name-input").value="",document.getElementById("bet-odds-input").value="",i.updateBetEventList()}static clear(){i.clearBetEventList(),i.clearBetEventPreview()}static clearBetEventList(){document.getElementById("bet-event-list").innerHTML=""}static handleKeyboardInput(t){"Escape"===t.key&&i.closeAllPopups()}static initAddBetEventButton(){const t=document.getElementById("button-add-bet-event"),e=document.getElementById("button-add-bet-event-popup"),n=document.getElementById("button-cancel-bet-event-popup"),s=document.getElementById("input-add-bet-event-popup");t.addEventListener("click",i.openAddBetEventPopup),e.addEventListener("click",i.addBetEvent),n.addEventListener("click",i.closeAddBetEventPopup),s.addEventListener("keypress",i.handleAddProjectPopupInput)}static openAddBetEventPopup(){document.getElementById("add-bet-event-popup").style.display="flex",document.getElementById("input-add-bet-event-popup").focus()}}document.addEventListener("DOMContentLoaded",i.loadContent)})();